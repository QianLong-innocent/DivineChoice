{"remainingRequest":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\store\\store.js","dependencies":[{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\store\\store.js","mtime":1617353310251},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616485460902},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\babel-loader\\lib\\index.js","mtime":1616485540067}],"contextDependencies":[],"result":["//  store.js 中都mutation中增加添加和删除token的方法\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar state = {\n  // 全局管理的数据存储\n  loginUser: localStorage.getItem('userType') ? localStorage.getItem('userType') : '',\n  // 用户类型\n  token: localStorage.getItem('token') ? localStorage.getItem('token') : '' // token\n\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: {\n    // 监听数据变化的\n    getStorage: function getStorage(state) {\n      // 获取本地存储的登录信息\n      if (!state.token) {\n        state.token = JSON.parse(localStorage.getItem(key));\n      }\n\n      return state.token;\n    }\n  },\n  mutations: {\n    $_setToken: function $_setToken(state, value) {\n      // 设置存储token\n      state.token = value;\n      localStorage.setItem('token', value);\n    },\n    $_setUserType: function $_setUserType(state, value) {\n      // 设置存储 用户类型\n      state.loginUser = value;\n      localStorage.setItem('userType', value);\n    },\n    $_removeStorage: function $_removeStorage(state, value) {\n      // 删除token\n      localStorage.removeItem('token');\n      localStorage.removeItem('userType');\n    }\n  }\n});",{"version":3,"sources":["C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\store\\store.js"],"names":["Vue","Vuex","use","state","loginUser","localStorage","getItem","token","Store","getters","getStorage","JSON","parse","key","mutations","$_setToken","value","setItem","$_setUserType","$_removeStorage","removeItem"],"mappings":"AAAA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,IAAME,KAAK,GAAG;AAAE;AAEfC,EAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCD,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAnC,GAAsE,EAFpE;AAEwE;AACrFC,EAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhC,GAAgE,EAH1D,CAG6D;;AAH7D,CAAd;AAKA,eAAe,IAAIL,IAAI,CAACO,KAAT,CAAe;AAC7BL,EAAAA,KAAK,EAALA,KAD6B;AAE7BM,EAAAA,OAAO,EAAE;AAAE;AACVC,IAAAA,UADQ,sBACGP,KADH,EACU;AAAE;AACnB,UAAI,CAACA,KAAK,CAACI,KAAX,EAAkB;AACjBJ,QAAAA,KAAK,CAACI,KAAN,GAAcI,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACC,OAAb,CAAqBO,GAArB,CAAX,CAAd;AACA;;AACD,aAAOV,KAAK,CAACI,KAAb;AACA;AANO,GAFoB;AAU7BO,EAAAA,SAAS,EAAE;AACVC,IAAAA,UADU,sBACCZ,KADD,EACQa,KADR,EACe;AAAE;AAC1Bb,MAAAA,KAAK,CAACI,KAAN,GAAcS,KAAd;AACAX,MAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BD,KAA9B;AACA,KAJS;AAKVE,IAAAA,aALU,yBAKIf,KALJ,EAKWa,KALX,EAKkB;AAAE;AAC7Bb,MAAAA,KAAK,CAACC,SAAN,GAAkBY,KAAlB;AACAX,MAAAA,YAAY,CAACY,OAAb,CAAqB,UAArB,EAAiCD,KAAjC;AACA,KARS;AASVG,IAAAA,eATU,2BASMhB,KATN,EASaa,KATb,EASoB;AAAE;AAC/BX,MAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AACAf,MAAAA,YAAY,CAACe,UAAb,CAAwB,UAAxB;AACA;AAZS;AAVkB,CAAf,CAAf","sourcesContent":["//  store.js 中都mutation中增加添加和删除token的方法\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nVue.use(Vuex)\r\n\r\nconst state = { // 全局管理的数据存储\r\n\t\r\n\tloginUser: localStorage.getItem('userType') ? localStorage.getItem('userType') : '', // 用户类型\r\n\ttoken: localStorage.getItem('token') ? localStorage.getItem('token') : '' // token\r\n};\r\nexport default new Vuex.Store({\r\n\tstate,\r\n\tgetters: { // 监听数据变化的\r\n\t\tgetStorage(state) { // 获取本地存储的登录信息\r\n\t\t\tif (!state.token) {\r\n\t\t\t\tstate.token = JSON.parse(localStorage.getItem(key))\r\n\t\t\t}\r\n\t\t\treturn state.token\r\n\t\t}\r\n\t},\r\n\tmutations: {\r\n\t\t$_setToken(state, value) { // 设置存储token\r\n\t\t\tstate.token = value;\r\n\t\t\tlocalStorage.setItem('token', value);\r\n\t\t},\r\n\t\t$_setUserType(state, value) { // 设置存储 用户类型\r\n\t\t\tstate.loginUser = value;\r\n\t\t\tlocalStorage.setItem('userType', value);\r\n\t\t},\r\n\t\t$_removeStorage(state, value) { // 删除token\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tlocalStorage.removeItem('userType');\r\n\t\t},\r\n\t\t\r\n\t}\r\n})\n"]}]}