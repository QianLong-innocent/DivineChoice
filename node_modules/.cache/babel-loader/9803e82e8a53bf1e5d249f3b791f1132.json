{"remainingRequest":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\views\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\views\\login\\login.vue","mtime":1621497842538},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616485460902},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\babel-loader\\lib\\index.js","mtime":1616485540067},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616485460902},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\vue-loader\\lib\\index.js","mtime":1616485526728}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport SIdentify from \"./verification.vue\";\nexport default {\n  name: \"Login\",\n  data: function data() {\n    var _this = this;\n\n    var checkID = function checkID(rule, value, callback) {\n      if (value === '') {\n        return callback(new Error('学/工号不能为空'));\n      } else if (value.length < 7) {\n        return callback(new Error('学/工号不能低于七位数'));\n      } else if (value.length > 10) {\n        return callback(new Error('学/工号不能高于十位数'));\n      }\n\n      callback();\n    };\n\n    var checkPass = function checkPass(rule, value, callback) {\n      if (value === '') {\n        return callback(new Error('密码不能为空'));\n      }\n\n      callback();\n    }; // 验证码自定义验证规则\n\n\n    var validateVerifycode = function validateVerifycode(rule, value, callback) {\n      var identifyCode = _this.identifyCode.toLowerCase();\n\n      var value = value.toLowerCase();\n\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else if (value !== identifyCode) {\n        _this.identifyCode = '';\n\n        _this.makeCode(_this.identifyCodes, 4);\n\n        callback(new Error('验证码不正确!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      identifyCodes: '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n      identifyCode: '',\n      form: {\n        username: '',\n        password: '',\n        verifycode: '',\n        type: ''\n      },\n      // 表单验证，需要在 el-form-item 元素中增加 prop 属性\n      rules: {\n        username: [{\n          required: true,\n          validator: checkID,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          validator: checkPass,\n          trigger: 'blur'\n        }],\n        verifycode: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateVerifycode\n        }],\n        type: [{\n          required: true,\n          message: '请输入用户类型',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  components: {\n    SIdentify: SIdentify\n  },\n  mounted: function mounted() {\n    // 验证码初始化\n    this.identifyCode = '';\n    this.makeCode(this.identifyCodes, 4);\n  },\n  methods: {\n    peoplePass: function peoplePass(url) {\n      // 开始登录验证\n      var that = this;\n      axios.post(url, {\n        username: this.form.username,\n        password: this.form.password\n      }).then(function (response) {\n        // 解决方法：转换为json格式进行存取\n        // 通过 接口url进入不同的界面\n        if (url.indexOf('student') != -1) {\n          that.$message({\n            message: '登陆成功',\n            type: 'success',\n            duration: '1000',\n            center: true\n          });\n          that.timer = setTimeout(function () {\n            //设置延迟执行\n            that.$store.commit('$_setUserType', JSON.stringify('/student'));\n            that.$store.commit('$_setToken', JSON.stringify(response.data));\n            that.$router.push('/student');\n          }, 1000);\n        } else if (url.indexOf('teacher') != -1) {\n          that.$message({\n            message: '登陆成功',\n            type: 'success',\n            duration: '1000',\n            center: true\n          });\n          that.timer = setTimeout(function () {\n            //设置延迟执行\n            that.$store.commit('$_setUserType', JSON.stringify('/teacher'));\n            that.$store.commit('$_setToken', JSON.stringify(response.data));\n            that.$router.push('/teacher');\n          }, 1000);\n        } else if (url.indexOf('leader') != -1) {\n          that.$message({\n            message: '登陆成功',\n            type: 'success',\n            duration: '1000',\n            center: true\n          });\n          that.timer = setTimeout(function () {\n            //设置延迟执行\n            that.$store.commit('$_setUserType', JSON.stringify('/leader'));\n            that.$store.commit('$_setToken', JSON.stringify(response.data));\n            that.$router.push('/leader');\n          }, 1000);\n        }\n      }).catch(function (error) {\n        // 编写登陆失败以及反馈信息给用户，明白自己哪里错误了。这里会返回404\n        that.loginFailed();\n      });\n    },\n    loginFailed: function loginFailed() {\n      this.$message.error('用户名或密码输入错误!');\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n      this.form.verifycode = '';\n      this.form.password = '';\n    },\n    onSubmit: function onSubmit(formName) {\n      var _this2 = this;\n\n      // 为表单绑定验证功能\n      this.$refs[formName].validate(function (valid) {\n        // 当用户，没有按照规则填写登录信息，就会是false\n        if (valid) {\n          if (_this2.form.type === 'student') {\n            _this2.peoplePass('http://localhost:8080/api/studentInfos/loginByPrimaryKeyWithPassword');\n          } else if (_this2.form.type === 'teacher') {\n            _this2.peoplePass('http://localhost:8080/api/teacherInfos/loginByPrimaryKeyWithPassword');\n          } else {\n            _this2.peoplePass('http://localhost:8080/api/leaderInfos/loginByPrimaryKeyWithPassword');\n          }\n        }\n      });\n    },\n    // 生成随机数\n    randomNum: function randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 切换验证码\n    refreshCode: function refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成四位随机验证码\n    makeCode: function makeCode(o, l) {\n      for (var i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n\n      console.log(this.identifyCode);\n    }\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<template id=\"login\">\r\n\r\n\t<div class=\"backgroun-img\">\r\n\t\t<el-form ref=\"loginForm\" :model=\"form\" :rules=\"rules\" label-width=\"80px\" class=\"login-box\" status-icon>\r\n\t\t\t<h3 class=\"login-title\">毕业设计选题管理系统</h3>\r\n\t\t\t<el-form-item label=\"学/工号\" prop=\"username\">\r\n\t\t\t\t<el-input type=\"text\" placeholder=\"请输入账号\" v-model=\"form.username\" prefix-icon=\"el-icon-user\"\r\n\t\t\t\t\t@keyup.enter.native=\"onSubmit('loginForm')\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"密码\" prop=\"password\">\r\n\t\t\t\t<el-input type=\"password\" placeholder=\"请输入密码\" v-model=\"form.password\" prefix-icon=\"el-icon-lock\"\r\n\t\t\t\t\tshow-password @keyup.enter.native=\"onSubmit('loginForm')\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"用户类型\" prop=\"type\">\r\n\t\t\t\t<el-select placeholder=\"请选择用户类型\" style=\"width: 100%;\" v-model=\"form.type\">\r\n\t\t\t\t\t<i slot=\"prefix\" class=\"iconfont iconyonghuleixing\" style=\"margin-left: 4px;\"></i>\r\n\t\t\t\t\t<el-option label=\"学生\" value=\"student\"></el-option>\r\n\t\t\t\t\t<el-option label=\"教师\" value=\"teacher\"></el-option>\r\n\t\t\t\t\t<el-option label=\"主任\" value=\"director\"></el-option>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<!-- <el-checkbox v-model=\"rememberPw\" checked class=\"remember\">记住密码</el-checkbox> -->\r\n\t\t\t<el-form-item label=\"验证码\" prop=\"verifycode\">\r\n\t\t\t\t<el-input v-model=\"form.verifycode\" placeholder=\"请输入验证码\" style=\"width: 150px;\"\r\n\t\t\t\t\t@keyup.enter.native=\"onSubmit('loginForm')\">\r\n\t\t\t\t\t<i slot=\"prefix\" class=\"iconfont iconyanzhengma\" style=\"margin-left: 4px;\"></i>\r\n\t\t\t\t</el-input>\r\n\r\n\t\t\t\t<div @click=\"refreshCode\" style=\"float: right;\">\r\n\t\t\t\t\t<s-identify :identifyCode=\"identifyCode\"></s-identify>\r\n\t\t\t\t</div>\r\n\t\t\t</el-form-item>\r\n\r\n\t\t\t<el-form-item>\r\n\t\t\t\t<el-button type=\"primary\" round @click=\"onSubmit('loginForm')\" style=\"width: 250px;\" :plain=\"true\">登录\r\n\t\t\t\t</el-button>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-tag type=\"danger\">忘记密码，请联系管理员：10086</el-tag>\r\n\r\n\t\t</el-form>\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script>\r\n\timport axios from 'axios';\r\n\r\n\timport SIdentify from './verification.vue'\r\n\r\n\r\n\texport default {\r\n\t\tname: \"Login\",\r\n\t\tdata() {\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\tvar checkID = (rule, value, callback) => {\r\n\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\treturn callback(new Error('学/工号不能为空'));\r\n\t\t\t\t} else if (value.length < 7) {\r\n\t\t\t\t\treturn callback(new Error('学/工号不能低于七位数'));\r\n\t\t\t\t} else if (value.length > 10) {\r\n\t\t\t\t\treturn callback(new Error('学/工号不能高于十位数'))\r\n\t\t\t\t}\r\n\t\t\t\tcallback();\r\n\r\n\t\t\t};\r\n\t\t\tvar checkPass = (rule, value, callback) => {\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\treturn callback(new Error('密码不能为空'));\r\n\t\t\t\t}\r\n\t\t\t\tcallback();\r\n\t\t\t};\r\n\t\t\t// 验证码自定义验证规则\r\n\t\t\tvar validateVerifycode = (rule, value, callback) => {\r\n\t\t\t\tvar identifyCode = this.identifyCode.toLowerCase()\r\n\t\t\t\tvar value = value.toLowerCase()\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\tcallback(new Error('请输入验证码'))\r\n\t\t\t\t} else if (value !== identifyCode) {\r\n\t\t\t\t\tthis.identifyCode = ''\r\n\t\t\t\t\tthis.makeCode(this.identifyCodes, 4)\r\n\t\t\t\t\tcallback(new Error('验证码不正确!'))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\r\n\t\t\t\tidentifyCodes: '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\r\n\t\t\t\tidentifyCode: '',\r\n\t\t\t\tform: {\r\n\t\t\t\t\tusername: '',\r\n\t\t\t\t\tpassword: '',\r\n\t\t\t\t\tverifycode: '',\r\n\t\t\t\t\ttype: '',\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// 表单验证，需要在 el-form-item 元素中增加 prop 属性\r\n\t\t\t\trules: {\r\n\t\t\t\t\tusername: [{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tvalidator: checkID,\r\n\t\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tpassword: [{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tvalidator: checkPass,\r\n\t\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tverifycode: [{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\ttrigger: 'blur',\r\n\t\t\t\t\t\tvalidator: validateVerifycode\r\n\t\t\t\t\t}],\r\n\t\t\t\t\ttype: [{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: '请输入用户类型',\r\n\t\t\t\t\t\ttrigger: 'change'\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tSIdentify\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\t// 验证码初始化\r\n\t\t\tthis.identifyCode = ''\r\n\t\t\tthis.makeCode(this.identifyCodes, 4)\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tpeoplePass(url) {\r\n\t\t\t\t// 开始登录验证\r\n\t\t\t\tlet that = this\r\n\t\t\t\t\r\n\t\t\t\taxios.post(url, {\r\n\t\t\t\t\t\tusername: this.form.username,\r\n\t\t\t\t\t\tpassword: this.form.password\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(response) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 解决方法：转换为json格式进行存取\r\n\t\t\t\t\t\t// 通过 接口url进入不同的界面\r\n\t\t\t\t\t\tif (url.indexOf('student') != -1) {\r\n\t\t\t\t\t\t\tthat.$message({\r\n\t\t\t\t\t\t\t\tmessage: '登陆成功',\r\n\t\t\t\t\t\t\t\ttype:'success',\r\n\t\t\t\t\t\t\t\tduration:'1000',\r\n\t\t\t\t\t\t\t\tcenter: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthat.timer = setTimeout(() => { //设置延迟执行\r\n\t\t\t\t\t\t\t\tthat.$store.commit('$_setUserType', JSON.stringify('/student'))\r\n\t\t\t\t\t\t\t\tthat.$store.commit('$_setToken', JSON.stringify(response.data));\r\n\t\t\t\t\t\t\t\tthat.$router.push('/student')\r\n\t\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (url.indexOf('teacher') != -1) {\r\n\t\t\t\t\t\t\tthat.$message({\r\n\t\t\t\t\t\t\t\tmessage: '登陆成功',\r\n\t\t\t\t\t\t\t\ttype:'success',\r\n\t\t\t\t\t\t\t\tduration:'1000',\r\n\t\t\t\t\t\t\t\tcenter: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthat.timer = setTimeout(() => { //设置延迟执行\r\n\t\t\t\t\t\t\t\tthat.$store.commit('$_setUserType', JSON.stringify('/teacher'))\r\n\t\t\t\t\t\t\t\tthat.$store.commit('$_setToken', JSON.stringify(response.data));\r\n\t\t\t\t\t\t\t\tthat.$router.push('/teacher')\r\n\t\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (url.indexOf('leader') != -1) {\r\n\t\t\t\t\t\t\tthat.$message({\r\n\t\t\t\t\t\t\t\tmessage: '登陆成功',\r\n\t\t\t\t\t\t\t\ttype:'success',\r\n\t\t\t\t\t\t\t\tduration:'1000',\r\n\t\t\t\t\t\t\t\tcenter: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tthat.timer = setTimeout(() => { //设置延迟执行\r\n\t\t\t\t\t\t\t\tthat.$store.commit('$_setUserType', JSON.stringify('/leader'))\r\n\t\t\t\t\t\t\t\tthat.$store.commit('$_setToken', JSON.stringify(response.data));\r\n\t\t\t\t\t\t\t\tthat.$router.push('/leader')\r\n\t\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 编写登陆失败以及反馈信息给用户，明白自己哪里错误了。这里会返回404\r\n\t\t\t\t\t\tthat.loginFailed()\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tloginFailed() {\r\n\t\t\t\tthis.$message.error('用户名或密码输入错误!');\r\n\t\t\t\tthis.identifyCode = ''\r\n\t\t\t\tthis.makeCode(this.identifyCodes, 4)\r\n\t\t\t\tthis.form.verifycode = ''\r\n\t\t\t\tthis.form.password = ''\r\n\t\t\t},\r\n\t\t\tonSubmit(formName) {\r\n\r\n\t\t\t\t// 为表单绑定验证功能\r\n\t\t\t\tthis.$refs[formName].validate((valid) => {\r\n\r\n\t\t\t\t\t// 当用户，没有按照规则填写登录信息，就会是false\r\n\t\t\t\t\tif (valid) {\r\n\t\t\t\t\t\tif (this.form.type === 'student') {\r\n\t\t\t\t\t\t\tthis.peoplePass(\r\n\t\t\t\t\t\t\t\t'http://localhost:8080/api/studentInfos/loginByPrimaryKeyWithPassword');\r\n\t\t\t\t\t\t} else if (this.form.type === 'teacher') {\r\n\t\t\t\t\t\t\tthis.peoplePass(\r\n\t\t\t\t\t\t\t\t'http://localhost:8080/api/teacherInfos/loginByPrimaryKeyWithPassword');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.peoplePass(\r\n\t\t\t\t\t\t\t\t'http://localhost:8080/api/leaderInfos/loginByPrimaryKeyWithPassword');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// 生成随机数\r\n\t\t\trandomNum(min, max) {\r\n\t\t\t\treturn Math.floor(Math.random() * (max - min) + min)\r\n\t\t\t},\r\n\t\t\t// 切换验证码\r\n\t\t\trefreshCode() {\r\n\t\t\t\tthis.identifyCode = ''\r\n\t\t\t\tthis.makeCode(this.identifyCodes, 4)\r\n\t\t\t},\r\n\t\t\t// 生成四位随机验证码\r\n\t\t\tmakeCode(o, l) {\r\n\t\t\t\tfor (let i = 0; i < l; i++) {\r\n\t\t\t\t\tthis.identifyCode += this.identifyCodes[\r\n\t\t\t\t\t\tthis.randomNum(0, this.identifyCodes.length)\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.identifyCode)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.backgroun-img {\r\n\t\tbackground: url(\"../../assets/images/background-login.jpg\");\r\n\t\tbackground-size: 100% 100%;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tposition: fixed;\r\n\t}\r\n\r\n\t.login-box {\r\n\t\tborder: 1px solid #DCDFE6;\r\n\t\twidth: 350px;\r\n\t\tposition: absolute;\r\n\t\tleft: 550px;\r\n\t\ttop: 15%;\r\n\t\tpadding: 35px 35px 15px 15px;\r\n\t\tborder-radius: 5px;\r\n\t\t-webkit-border-radius: 5px;\r\n\t\t-moz-border-radius: 5px;\r\n\t\tbox-shadow: 0 0 25px #909399;\r\n\t\tbackground-color: #FFFFFF;\r\n\t}\r\n\r\n\t.login-title {\r\n\t\ttext-align: center;\r\n\t\tmargin: 0 auto 40px auto;\r\n\t\tmargin-left: 50px;\r\n\t\tcolor: #303133;\r\n\t}\r\n</style>\n"],"sourceRoot":"src/views/login"}]}