{"remainingRequest":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\views\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\views\\login\\login.vue","mtime":1616654071826},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616485460902},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\babel-loader\\lib\\index.js","mtime":1616485540067},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616485460902},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\vue-loader\\lib\\index.js","mtime":1616485526728}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\nimport SIdentify from './verification.vue'\n\n\nexport default {\n\tname: \"Login\",\n\tdata() {\n\n\t\tvar checkID = (rule, value, callback) => {\n\n\t\t\tif (value === '') {\n\t\t\t\treturn callback(new Error('学/工号不能为空'));\n\t\t\t} else if (value.length < 8) {\n\t\t\t\treturn callback(new Error('学/工号不能低于八位数'));\n\t\t\t} else if (value.length > 10) {\n\t\t\t\treturn callback(new Error('学/工号不能高于十位数'))\n\t\t\t}\n\t\t\tcallback();\n\n\t\t};\n\t\tvar checkPass = (rule, value, callback) => {\n\t\t\tif (value === '') {\n\t\t\t\treturn callback(new Error('密码不能为空'));\n\t\t\t}\n\t\t\tcallback();\n\t\t};\n\t\t// 验证码自定义验证规则\n\t\tvar validateVerifycode = (rule, value, callback) => {\n\t\t\tthis.identifyCode = this.identifyCode.toLowerCase()\n\t\t\tvalue = value.toLowerCase()\n\t\t\tif (value === '') {\n\t\t\t\tcallback(new Error('请输入验证码'))\n\t\t\t} else if (value !== this.identifyCode) {\n\t\t\t\tcallback(new Error('验证码不正确!'))\n\t\t\t} else {\n\t\t\t\tcallback()\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tidentifyCodes: '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n\t\t\tidentifyCode: '',\n\t\t\tform: {\n\t\t\t\tusername: '',\n\t\t\t\tpassword: '',\n\t\t\t\tverifycode: '',\n\t\t\t\ttype: '',\n\t\t\t\tkeywords: '*&^&*%^&%^&$%^'\n\t\t\t},\n\n\t\t\t// 表单验证，需要在 el-form-item 元素中增加 prop 属性\n\t\t\trules: {\n\t\t\t\tusername: [{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalidator: checkID,\n\t\t\t\t\ttrigger: 'blur'\n\t\t\t\t}],\n\t\t\t\tpassword: [{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalidator: checkPass,\n\t\t\t\t\ttrigger: 'blur'\n\t\t\t\t}],\n\t\t\t\tverifycode: [{\n\t\t\t\t\trequired: true,\n\t\t\t\t\ttrigger: 'blur',\n\t\t\t\t\tvalidator: validateVerifycode\n\t\t\t\t}],\n\t\t\t\ttype: [{\n\t\t\t\t\trequired: true,\n\t\t\t\t\tmessage: '请输入用户类型',\n\t\t\t\t\ttrigger: 'change'\n\t\t\t\t}]\n\t\t\t},\n\n\t\t\t// 对话框显示和隐藏\n\t\t\tdialogVisible: false\n\n\t\t}\n\t},\n\tcomponents: {\n\t\tSIdentify\n\t},\n\tmounted() {\n\t\t// 验证码初始化\n\t\tthis.identifyCode = ''\n\t\tthis.makeCode(this.identifyCodes, 4)\n\t},\n\tmethods: {\n\n\t\tonSubmit(formName) {\n\n\t\t\t// 为表单绑定验证功能\n\t\t\tthis.$refs[formName].validate((valid) => {\n\n\t\t\t\t// 当用户，没有按照规则填写登录信息，就会是false\n\t\t\t\tif (valid) {\n\t\t\t\t\t// 开始登录验证\n\t\t\t\t\tlet that = this\n\t\t\t\t\taxios.get(\n\t\t\t\t\t\t\t'http://musicapi.leanapp.cn/search', {\n\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\tkeywords: this.form.keywords\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// password: this.form.password\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(function(response) {\n\n\t\t\t\t\t\t\t// 前后端一个约定。如何如何，是一个规定。如果怎么怎么样，就登陆失败\n\t\t\t\t\t\t\tif (response.data.code === '404') {\n\n\t\t\t\t\t\t\t\tthat.dialogVisible = true\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar userInfo = res.data.data;\n\t\t\t\t\t\t\t\tthis.$store.commit('$_setToken', userInfo.token);\n\t\t\t\t\t\t\t\tToast({\n\t\t\t\t\t\t\t\t\tmessage: '登录成功',\n\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\tduration: 1500\n\t\t\t\t\t\t\t\t}); // ui弹窗提示\n\t\t\t\t\t\t\t\tthat.$router.push('/main')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function(error) {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tregisterForm(formName) {\n\t\t\tconsole.log(this.$refs[formName])\n\t\t\tthis.$refs[formName].validate((valid) => {\n\t\t\t\tconsole.log(valid)\n\t\t\t})\n\t\t},\n\t\t// 生成随机数\n\t\trandomNum(min, max) {\n\t\t\treturn Math.floor(Math.random() * (max - min) + min)\n\t\t},\n\t\t// 切换验证码\n\t\trefreshCode() {\n\t\t\tthis.identifyCode = ''\n\t\t\tthis.makeCode(this.identifyCodes, 4)\n\t\t},\n\t\t// 生成四位随机验证码\n\t\tmakeCode(o, l) {\n\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\tthis.identifyCode += this.identifyCodes[\n\t\t\t\t\tthis.randomNum(0, this.identifyCodes.length)\n\t\t\t\t]\n\t\t\t}\n\t\t\tconsole.log(this.identifyCode)\n\t\t}\n\n\t}\n}\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"login.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\r\n\r\n\t<div class=\"backgroun-img\">\r\n\t\t<el-form ref=\"loginForm\" :model=\"form\" :rules=\"rules\" label-width=\"80px\" class=\"login-box\" status-icon>\r\n\t\t\t<h3 class=\"login-title\">毕业设计选题管理系统</h3>\r\n\t\t\t<el-form-item label=\"学/工号\" prop=\"username\">\r\n\t\t\t\t<el-input type=\"text\" placeholder=\"请输入账号\" v-model=\"form.username\" prefix-icon=\"el-icon-user\"\r\n\t\t\t\t\t@keyup.enter.native=\"onSubmit('loginForm')\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"密码\" prop=\"password\">\r\n\t\t\t\t<el-input type=\"password\" placeholder=\"请输入密码\" v-model=\"form.password\" prefix-icon=\"el-icon-lock\"\r\n\t\t\t\t\tshow-password @keyup.enter.native=\"onSubmit('loginForm')\" />\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"用户类型\" prop=\"type\">\r\n\t\t\t\t<el-select placeholder=\"请选择用户类型\" style=\"width: 100%;\" v-model=\"form.type\">\r\n\t\t\t\t\t<i slot=\"prefix\" class=\"iconfont iconyonghuleixing\" style=\"margin-left: 4px;\"></i>\r\n\t\t\t\t\t<el-option label=\"学生\" value=\"student\"></el-option>\r\n\t\t\t\t\t<el-option label=\"教师\" value=\"teacher\"></el-option>\r\n\t\t\t\t\t<el-option label=\"主任\" value=\"director\"></el-option>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<!-- <el-checkbox v-model=\"rememberPw\" checked class=\"remember\">记住密码</el-checkbox> -->\r\n\t\t\t<el-form-item label=\"验证码\" prop=\"verifycode\">\r\n\t\t\t\t<el-input v-model=\"form.verifycode\" placeholder=\"请输入验证码\" style=\"width: 150px;\"\r\n\t\t\t\t\t@keyup.enter.native=\"onSubmit('loginForm')\">\r\n\t\t\t\t\t<i slot=\"prefix\" class=\"iconfont iconyanzhengma\" style=\"margin-left: 4px;\"></i>\r\n\t\t\t\t</el-input>\r\n\r\n\t\t\t\t<div @click=\"refreshCode\" style=\"float: right;\">\r\n\t\t\t\t\t<s-identify :identifyCode=\"identifyCode\"></s-identify>\r\n\t\t\t\t</div>\r\n\t\t\t</el-form-item>\r\n\r\n\r\n\t\t\t<el-form-item style=\"margin: 20px;\">\r\n\t\t\t\t<el-button type=\"primary\" round @click=\"onSubmit('loginForm')\">登录</el-button>\r\n\t\t\t\t&emsp;&emsp;\r\n\t\t\t\t<el-button type=\"warning\" round @click=\"registerForm('loginForm')\">注册</el-button>\r\n\t\t\t</el-form-item>\r\n\r\n\t\t</el-form>\r\n\r\n\t\t<el-dialog title=\"温馨提示\" :visible.sync=\"dialogVisible\" width=\"25%\">\r\n\t\t\t<span>该用户不存在或者密码输入错误</span>\r\n\t\t\t<span slot=\"footer\" class=\"dialog-footer\">\r\n\t\t\t\t<el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n\t\t\t</span>\r\n\t\t</el-dialog>\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script>\r\n\timport axios from 'axios';\r\n\r\n\timport SIdentify from './verification.vue'\r\n\r\n\r\n\texport default {\r\n\t\tname: \"Login\",\r\n\t\tdata() {\r\n\r\n\t\t\tvar checkID = (rule, value, callback) => {\r\n\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\treturn callback(new Error('学/工号不能为空'));\r\n\t\t\t\t} else if (value.length < 8) {\r\n\t\t\t\t\treturn callback(new Error('学/工号不能低于八位数'));\r\n\t\t\t\t} else if (value.length > 10) {\r\n\t\t\t\t\treturn callback(new Error('学/工号不能高于十位数'))\r\n\t\t\t\t}\r\n\t\t\t\tcallback();\r\n\r\n\t\t\t};\r\n\t\t\tvar checkPass = (rule, value, callback) => {\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\treturn callback(new Error('密码不能为空'));\r\n\t\t\t\t}\r\n\t\t\t\tcallback();\r\n\t\t\t};\r\n\t\t\t// 验证码自定义验证规则\r\n\t\t\tvar validateVerifycode = (rule, value, callback) => {\r\n\t\t\t\tthis.identifyCode = this.identifyCode.toLowerCase()\r\n\t\t\t\tvalue = value.toLowerCase()\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\tcallback(new Error('请输入验证码'))\r\n\t\t\t\t} else if (value !== this.identifyCode) {\r\n\t\t\t\t\tcallback(new Error('验证码不正确!'))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tidentifyCodes: '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\r\n\t\t\t\tidentifyCode: '',\r\n\t\t\t\tform: {\r\n\t\t\t\t\tusername: '',\r\n\t\t\t\t\tpassword: '',\r\n\t\t\t\t\tverifycode: '',\r\n\t\t\t\t\ttype: '',\r\n\t\t\t\t\tkeywords: '*&^&*%^&%^&$%^'\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// 表单验证，需要在 el-form-item 元素中增加 prop 属性\r\n\t\t\t\trules: {\r\n\t\t\t\t\tusername: [{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tvalidator: checkID,\r\n\t\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tpassword: [{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tvalidator: checkPass,\r\n\t\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tverifycode: [{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\ttrigger: 'blur',\r\n\t\t\t\t\t\tvalidator: validateVerifycode\r\n\t\t\t\t\t}],\r\n\t\t\t\t\ttype: [{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: '请输入用户类型',\r\n\t\t\t\t\t\ttrigger: 'change'\r\n\t\t\t\t\t}]\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// 对话框显示和隐藏\r\n\t\t\t\tdialogVisible: false\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tSIdentify\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\t// 验证码初始化\r\n\t\t\tthis.identifyCode = ''\r\n\t\t\tthis.makeCode(this.identifyCodes, 4)\r\n\t\t},\r\n\t\tmethods: {\r\n\r\n\t\t\tonSubmit(formName) {\r\n\r\n\t\t\t\t// 为表单绑定验证功能\r\n\t\t\t\tthis.$refs[formName].validate((valid) => {\r\n\r\n\t\t\t\t\t// 当用户，没有按照规则填写登录信息，就会是false\r\n\t\t\t\t\tif (valid) {\r\n\t\t\t\t\t\t// 开始登录验证\r\n\t\t\t\t\t\tlet that = this\r\n\t\t\t\t\t\taxios.get(\r\n\t\t\t\t\t\t\t\t'http://musicapi.leanapp.cn/search', {\r\n\t\t\t\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t\t\t\tkeywords: this.form.keywords\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// password: this.form.password\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then(function(response) {\r\n\r\n\t\t\t\t\t\t\t\t// 前后端一个约定。如何如何，是一个规定。如果怎么怎么样，就登陆失败\r\n\t\t\t\t\t\t\t\tif (response.data.code === '404') {\r\n\r\n\t\t\t\t\t\t\t\t\tthat.dialogVisible = true\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar userInfo = res.data.data;\r\n\t\t\t\t\t\t\t\t\tthis.$store.commit('$_setToken', userInfo.token);\r\n\t\t\t\t\t\t\t\t\tToast({\r\n\t\t\t\t\t\t\t\t\t\tmessage: '登录成功',\r\n\t\t\t\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\t\t\t\tduration: 1500\r\n\t\t\t\t\t\t\t\t\t}); // ui弹窗提示\r\n\t\t\t\t\t\t\t\t\tthat.$router.push('/main')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tregisterForm(formName) {\r\n\t\t\t\tconsole.log(this.$refs[formName])\r\n\t\t\t\tthis.$refs[formName].validate((valid) => {\r\n\t\t\t\t\tconsole.log(valid)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// 生成随机数\r\n\t\t\trandomNum(min, max) {\r\n\t\t\t\treturn Math.floor(Math.random() * (max - min) + min)\r\n\t\t\t},\r\n\t\t\t// 切换验证码\r\n\t\t\trefreshCode() {\r\n\t\t\t\tthis.identifyCode = ''\r\n\t\t\t\tthis.makeCode(this.identifyCodes, 4)\r\n\t\t\t},\r\n\t\t\t// 生成四位随机验证码\r\n\t\t\tmakeCode(o, l) {\r\n\t\t\t\tfor (let i = 0; i < l; i++) {\r\n\t\t\t\t\tthis.identifyCode += this.identifyCodes[\r\n\t\t\t\t\t\tthis.randomNum(0, this.identifyCodes.length)\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.identifyCode)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.backgroun-img {\r\n\t\tbackground: url(\"../../assets/images/background-login.jpg\");\r\n\t\tmargin-top: -10px;\r\n\t\tmargin-left: -9px;\r\n\t\tbackground-size: 100% 100%;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tposition: fixed;\r\n\t}\r\n\r\n\t.login-box {\r\n\t\tborder: 1px solid #DCDFE6;\r\n\t\twidth: 350px;\r\n\t\tposition: absolute;\r\n\t\tleft: 550px;\r\n\t\ttop: 15%;\r\n\t\tpadding: 35px 35px 15px 15px;\r\n\t\tborder-radius: 5px;\r\n\t\t-webkit-border-radius: 5px;\r\n\t\t-moz-border-radius: 5px;\r\n\t\tbox-shadow: 0 0 25px #909399;\r\n\t\tbackground-color: #FFFFFF;\r\n\t}\r\n\r\n\t.login-title {\r\n\t\ttext-align: center;\r\n\t\tmargin: 0 auto 40px auto;\r\n\t\tmargin-left: 50px;\r\n\t\tcolor: #303133;\r\n\t}\r\n</style>\n"]}]}