{"remainingRequest":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\views\\student\\breadCrumb.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\src\\views\\student\\breadCrumb.vue","mtime":1617692286760},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616485460902},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\babel-loader\\lib\\index.js","mtime":1616485540067},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616485460902},{"path":"C:\\Users\\xiaoxi\\Desktop\\毕业设计\\Mr.Qin\\DivineChoice\\node_modules\\vue-loader\\lib\\index.js","mtime":1616485526728}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tlevelList: null\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.getBreadList()\n\t},\n\twatch: {\n\t\t$route() {\n\t\t\tthis.getBreadList()\n\t\t}\n\t},\n\tmethods: {\n\t\tgetBreadList() {\n\t\t\tlet matched = this.$route.matched.filter(item => item.name) //$route.matched 将会是一个包含从上到下的所有对象 (副本)。\n\t\t\t//  const first=matched[0]\n\t\t\t//  if(first && first.name !=='home'){//$route.name当前路由名称；$route.redirectedFrom重定向来源的路由的名字\n\t\t\t//    matched=[{ path: '/home', meta: { title: '首页' }}].concat(matched)\n\t\t\t//  }\n\t\t\tthis.levelList = matched\n\t\t},\n\t\thandleLink(item) {\n\t\t\tconst {\n\t\t\t\tredirect,\n\t\t\t\tpath\n\t\t\t} = item\n\t\t\tif (redirect) {\n\t\t\t\tthis.$router.push(redirect)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.$router.push(this.pathCompile(path))\n\t\t},\n\t\tpathCompile(path) {\n\t\t\tconst {\n\t\t\t\tparams\n\t\t\t} = this.$route\n\t\t\tvar toPath = pathToRegexp.compile(path) //url 的正则表达式,快速填充 url 字符串的参数值。\n\t\t\treturn toPath(params)\n\t\t},\n\n\t},\n}\n",{"version":3,"sources":["breadCrumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"breadCrumb.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\r\n\t<div class=\"breadcrumb\">\r\n\t\t<!-- <el-breadcrumb class=\"app-breadcrumb\" separator=\">\">\r\n\t\t\t<transition-group>\r\n\t\t\t\t<el-breadcrumb-item v-for=\"item in levelList\" :key=\"item.path\">\r\n\t\t\t\t\t<a @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\r\n\t\t\t\t</el-breadcrumb-item>\r\n\t\t\t</transition-group>\r\n\t\t</el-breadcrumb> -->\r\n\t\t<el-breadcrumb separator=\"/\">\r\n\t\t\t<el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n\t\t\t<el-breadcrumb-item><a href=\"/\">活动管理</a></el-breadcrumb-item>\r\n\t\t\t<el-breadcrumb-item>活动列表</el-breadcrumb-item>\r\n\t\t\t<el-breadcrumb-item>活动详情</el-breadcrumb-item>\r\n\t\t</el-breadcrumb>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tlevelList: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.getBreadList()\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t$route() {\r\n\t\t\t\tthis.getBreadList()\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tgetBreadList() {\r\n\t\t\t\tlet matched = this.$route.matched.filter(item => item.name) //$route.matched 将会是一个包含从上到下的所有对象 (副本)。\r\n\t\t\t\t//  const first=matched[0]\r\n\t\t\t\t//  if(first && first.name !=='home'){//$route.name当前路由名称；$route.redirectedFrom重定向来源的路由的名字\r\n\t\t\t\t//    matched=[{ path: '/home', meta: { title: '首页' }}].concat(matched)\r\n\t\t\t\t//  }\r\n\t\t\t\tthis.levelList = matched\r\n\t\t\t},\r\n\t\t\thandleLink(item) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tredirect,\r\n\t\t\t\t\tpath\r\n\t\t\t\t} = item\r\n\t\t\t\tif (redirect) {\r\n\t\t\t\t\tthis.$router.push(redirect)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tthis.$router.push(this.pathCompile(path))\r\n\t\t\t},\r\n\t\t\tpathCompile(path) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tparams\r\n\t\t\t\t} = this.$route\r\n\t\t\t\tvar toPath = pathToRegexp.compile(path) //url 的正则表达式,快速填充 url 字符串的参数值。\r\n\t\t\t\treturn toPath(params)\r\n\t\t\t},\r\n\r\n\t\t},\r\n\t}\r\n</script>\n"]}]}